version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: ${DB_USER:-pmuser}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-pmpass}
      POSTGRES_DB: ${DB_NAME:-pmdb}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-pmuser}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD:-redispass}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    image: node:20
    working_dir: /app
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${DB_USER:-pmuser}:${DB_PASSWORD:-pmpass}@postgres:5432/${DB_NAME:-pmdb}
      REDIS_URL: redis://:${REDIS_PASSWORD:-redispass}@redis:6379
      JWT_SECRET: ${JWT_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      JWT_EXPIRY: ${JWT_EXPIRY:-15m}
      JWT_REFRESH_EXPIRY: ${JWT_REFRESH_EXPIRY:-7d}
      PORT: 4000
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
    volumes:
      - ./backend:/app
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "npm install && npx prisma generate && mkdir -p logs && npm run dev"
    restart: unless-stopped

  frontend:
    image: node:20-alpine
    working_dir: /app
    environment:
      VITE_API_URL: http://${VPS_IP:-localhost}/api
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm run dev -- --host 0.0.0.0"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
